name: Build and Release Electron App

on:
    workflow_dispatch:
        inputs:
            allowed_websites:
                description: "Comma-separated list of allowed websites"
                required: true
                default: "https://google.com,https://github.com"
            app_name:
                description: "Application name"
                required: false
                default: "WEAP Browser"
            release_tag:
                description: "Release tag (leave empty for no release)"
                required: false
                default: ""

jobs:
    build:
        strategy:
            matrix:
                os: [macos-latest, windows-latest, ubuntu-latest]

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Build TypeScript
              run: pnpm run build
              env:
                  ALLOWED_WEBSITES: ${{ github.event.inputs.allowed_websites }}
                  APP_NAME: ${{ github.event.inputs.app_name }}

            - name: Build Electron app (macOS)
              if: matrix.os == 'macos-latest'
              run: pnpm run dist:mac
              env:
                  ALLOWED_WEBSITES: ${{ github.event.inputs.allowed_websites }}
                  APP_NAME: ${{ github.event.inputs.app_name }}
                  CSC_IDENTITY_AUTO_DISCOVERY: false
                  CSC_LINK: ""
                  CSC_KEY_PASSWORD: ""

            - name: Build Electron app (Windows)
              if: matrix.os == 'windows-latest'
              run: pnpm run dist:win
              env:
                  ALLOWED_WEBSITES: ${{ github.event.inputs.allowed_websites }}
                  APP_NAME: ${{ github.event.inputs.app_name }}

            - name: Build Electron app (Linux)
              if: matrix.os == 'ubuntu-latest'
              run: pnpm run dist:linux
              env:
                  ALLOWED_WEBSITES: ${{ github.event.inputs.allowed_websites }}
                  APP_NAME: ${{ github.event.inputs.app_name }}

            - name: Upload artifacts (macOS)
              if: matrix.os == 'macos-latest'
              uses: actions/upload-artifact@v4
              with:
                  name: macos-builds
                  path: |
                      dist-electron/*.dmg
                      dist-electron/*.zip

            - name: Upload artifacts (Windows)
              if: matrix.os == 'windows-latest'
              uses: actions/upload-artifact@v4
              with:
                  name: windows-builds
                  path: |
                      dist-electron/*.exe
                      dist-electron/*.msi

            - name: Upload artifacts (Linux)
              if: matrix.os == 'ubuntu-latest'
              uses: actions/upload-artifact@v4
              with:
                  name: linux-builds
                  path: |
                      dist-electron/*.AppImage
                      dist-electron/*.deb
                      dist-electron/*.rpm

    release:
        if: github.event.inputs.release_tag != ''
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download all artifacts
              uses: actions/download-artifact@v4

            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ github.event.inputs.release_tag }}
                  name: WEAP Browser ${{ github.event.inputs.release_tag }}
                  body: |
                      ## WEAP Browser Release ${{ github.event.inputs.release_tag }}

                      **Allowed Websites:** ${{ github.event.inputs.allowed_websites }}
                      **App Name:** ${{ github.event.inputs.app_name }}

                      ### Downloads

                      **macOS:**
                      - DMG installer (Intel & Apple Silicon)
                      - ZIP archive (Intel & Apple Silicon)

                      **Windows:**
                      - NSIS installer (x64, x86, ARM64)
                      - Portable executable (x64, x86, ARM64)

                      **Linux:**
                      - AppImage (x64, ARM64)
                      - DEB package (x64, ARM64)
                      - RPM package (x64, ARM64)

                      ### Installation Instructions

                      **macOS:** Download and open the DMG file, then drag the app to Applications folder
                      **Windows:** Download and run the installer, or use the portable version
                      **Linux:** Download the AppImage and make it executable, or install the DEB/RPM package

                  files: |
                      macos-builds/*
                      windows-builds/*
                      linux-builds/*
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
